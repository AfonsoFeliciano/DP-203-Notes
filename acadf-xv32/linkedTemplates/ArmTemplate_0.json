{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "acadf-xv32"
		},
		"admin_data_lake_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'admin_data_lake'"
		},
		"weather_analytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'weather_analytics'"
		},
		"weather_data_lake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'weather_data_lake'"
		},
		"weather_data_lake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://acweatherxv32.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/admin_data_lake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('admin_data_lake_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/weather_analytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('weather_analytics_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/weather_data_lake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('weather_data_lake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('weather_data_lake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/uk_path')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "weather_data_lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "uk1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/weather_data_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/usa_path')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "weather_data_lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "usa"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/weather_data_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weather_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "weather_data_lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/weather_data_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weather_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "weather_analytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "high",
						"type": "int",
						"precision": 10
					},
					{
						"name": "low",
						"type": "int",
						"precision": 10
					},
					{
						"name": "conditions",
						"type": "varchar"
					},
					{
						"name": "source",
						"type": "varchar"
					},
					{
						"name": "processed",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Weather"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/weather_analytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weather Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "$$FILEPATH"
									},
									{
										"name": "processed",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "*",
									"wildcardFileName": "weather_*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "admin_data_lake",
									"type": "LinkedServiceReference"
								},
								"path": "stage"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['high']"
										},
										"sink": {
											"name": "high",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['low']"
										},
										"sink": {
											"name": "low",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['conditions']"
										},
										"sink": {
											"name": "conditions",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['processed']"
										},
										"sink": {
											"name": "processed",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "weather_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "weather_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete USA Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "usa_path",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "weather_*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete UK Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "uk_path",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "weather_*.json",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/weather_files')]",
				"[concat(variables('factoryId'), '/datasets/weather_table')]",
				"[concat(variables('factoryId'), '/datasets/usa_path')]",
				"[concat(variables('factoryId'), '/datasets/uk_path')]",
				"[concat(variables('factoryId'), '/linkedServices/admin_data_lake')]"
			]
		}
	]
}